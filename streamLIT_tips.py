import streamlit as st
import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
import seaborn as sns
import yfinance as yf
from sklearn import datasets
from sklearn.ensemble import RandomForestClassifier
import numpy as np

def main():
    st.set_page_config(page_title='My Streamlit TIPS dataset', layout='wide', page_icon="üßä")
    st.write(" ### –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ —á–∞–µ–≤—ã–º ")

    if st.button('–ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—è –¥–ª—è + –≤ –≤–∞—à—É –∫–∞—Ä–º—É :)'):
        st.write('–î–∞ –ø—Ä–µ–±—É–¥–µ—Ç —Å –≤–∞–º–∏ —Å–∏–ª–∞!')
    st.write("""## –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ —á–µ–∫–∞–º""")
    path = 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv'
    df = pd.read_csv(path)
    st.dataframe(df)
    fig, ax = plt.subplots()
    ax.hist(df['total_bill'], color='skyblue', bins=10, edgecolor='white')
    ax.set_xlabel('Total Bill')
    ax.set_ylabel('Count')
    ax.set_title('–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ —á–µ–∫–∞–º')
    st.pyplot(fig)

    st.write("""## –ì—Ä–∞—Ñ–∏–∫ –≤–∑–∏–º–æ—Å–≤—è–∑–∏ —Ä–∞–∑–º–µ—Ä–∞ —á–µ–∫–∞ –∏ —á–∞–µ–≤—ã—Ö –≤ –Ω–µ–º""")
    colors = np.arange(len(df))
    fig, ax = plt.subplots()
    scatter = ax.scatter(df['total_bill'], df['tip'], c=colors, cmap='rainbow')
    ax.set_xlabel('Total Bill')
    ax.set_ylabel('Tip')
    ax.set_title('Scatterplot of Total Bill vs Tip')
    st.pyplot(fig)

    st.write("""## –ì—Ä–∞—Ñ–∏–∫ –≤–∑–∏–º–æ—Å–≤—è–∑–∏ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞ —á–µ–∫–∞""")
    fig, ax = plt.subplots()
    ax.scatter(df['total_bill'], df['day'], c=colors, cmap='cool')
    ax.set_xlabel('Total Bill')
    ax.set_ylabel('Day of the week')
    ax.set_title('Scatterplot of Total Bill vs Day of the week')
    st.pyplot(fig)

    st.write("""
             ## Box plot c —Å—É–º–º–æ–π –≤—Å–µ—Ö —Å—á–µ—Ç–æ–≤ –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, c —Ä–∞–∑–±–∏–≤–∫–æ–π –ø–æ time (Dinner/Lunch)
             """)

    grouped = df.groupby(['day', 'time']).sum().reset_index()
    fig, ax = plt.subplots(figsize=(10, 6))
    ax.boxplot([grouped[grouped['time'] == 'Lunch']['total_bill'], grouped[grouped['time'] == 'Dinner']['total_bill']],
           labels=['Lunch', 'Dinner'])
    ax.set_title('Box Plot of Total Bills by Time', fontsize=16)
    ax.set_xlabel('Time')
    ax.set_ylabel('Total Bill')
    st.pyplot(fig)

    st.write("""
             ## –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã —á–∞–µ–≤—ã—Ö –Ω–∞ –æ–±–µ–¥–µ –∏ —É–∂–∏–Ω–µ
             """)
    lunch_data = df[df['time'] == 'Lunch']['tip']
    dinner_data = df[df['time'] == 'Dinner']['tip']

    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 4))
    ax1.hist(lunch_data, bins=25, color='blue', alpha=0.8, edgecolor='black')
    ax2.hist(dinner_data, bins=25, color='yellow', alpha=0.3, edgecolor='blue')
    ax1.set_xlabel('Tips')
    ax1.set_ylabel('Quantity of tips in Dollars')
    ax1.set_title('Lunch Tips')
    ax2.set_xlabel('Tips')
    ax2.set_ylabel('Quantity of tips in Dollars')
    ax2.set_title('Dinner Tips')
    plt.tight_layout()
    st.pyplot(fig)

    st.write("""
             ## –í–∑–∞–∏–º–æ—Å–≤—è–∑—å —Ä–∞–∑–º–µ—Ä–∞ —Å—á–µ—Ç–∞ –∏ —á–∞–µ–≤—ã—Ö, —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–æ–π –ø–æ –∫—É—Ä—è—â–∏–º/–Ω–µ–∫—É—Ä—è—â–∏–º
             """)
    fig, axes = plt.subplots(1, 4, figsize=(16, 6))
    axes[0].scatter(df.loc[(df["sex"]=="Male") & (df["smoker"]=="No"), "total_bill"],
                df.loc[(df["sex"]=="Male") & (df["smoker"]=="No"), "tip"])
    axes[0].set_xlabel("Total Bill")
    axes[0].set_ylabel("Tip")
    axes[0].set_title("–ú—É–∂—á–∏–Ω—ã, –Ω–µ–∫—É—Ä—è—â–∏–µ")
    axes[1].scatter(df.loc[(df["sex"]=="Female") & (df["smoker"]=="No"), "total_bill"],
                df.loc[(df["sex"]=="Female") & (df["smoker"]=="No"), "tip"])
    axes[1].set_xlabel("Total Bill")
    axes[1].set_ylabel("Tip")
    axes[1].set_title("–ñ–µ–Ω—â–∏–Ω—ã, –Ω–µ–∫—É—Ä—è—â–∏–µ")
    axes[2].scatter(df.loc[(df["sex"]=="Male") & (df["smoker"]=="Yes"), "total_bill"],
                df.loc[(df["sex"]=="Male") & (df["smoker"]=="Yes"), "tip"])
    axes[2].set_xlabel("Total Bill")
    axes[2].set_ylabel("Tip")
    axes[2].set_title("–ú—É–∂—á–∏–Ω—ã, –∫—É—Ä—è—â–∏–µ")
    axes[3].scatter(df.loc[(df["sex"]=="Female") & (df["smoker"]=="Yes"), "total_bill"],
                df.loc[(df["sex"]=="Female") & (df["smoker"]=="Yes"), "tip"])
    axes[3].set_xlabel("Total Bill")
    axes[3].set_ylabel("Tip")
    axes[3].set_title("–ñ–µ–Ω—â–∏–Ω—ã, –∫—É—Ä—è—â–∏–µ")


    st.pyplot(fig)


if __name__ == '__main__':
    main()